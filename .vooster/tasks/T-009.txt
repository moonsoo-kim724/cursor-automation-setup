# 장애 알림(Slack, 이메일) 연동

**Task ID:** T-009
**Status:** DONE
**Importance:** MUST
**Complexity:** 3/10
**Urgency:** 7/10
**Dependencies:** T-002

## Description

### 설명
시스템의 안정성을 확보하기 위해 주요 기능(API, 데이터베이스, 챗봇 등)에서 장애나 오류가 발생했을 때, 개발팀이 즉시 인지할 수 있도록 실시간 경고를 Slack과 이메일로 발송하는 모니터링 시스템을 구축합니다.

### 구현 상세
1.  **전역 에러 핸들링**: 모든 Supabase Edge Function의 최상위에 `try...catch` 블록을 적용하여 예상치 못한 에러를 모두 포착하도록 합니다.
2.  **알림 로직 구현**: `catch` 블록 내에서 에러 객체(메시지, 스택 트레이스 등)의 정보를 포함하여 Slack과 이메일로 알림을 보내는 공통 함수를 호출합니다.
3.  **Slack 알림**: `@slack/webhook` 라이브러리를 사용하여 지정된 Slack 채널로 에러 정보를 담은 메시지를 전송합니다. 메시지에는 에러가 발생한 함수명, 시간, 에러 내용 등이 포함되어야 합니다.
4.  **이메일 알림**: `Resend` API를 사용하여 시스템 관리자 그룹에게 상세한 에러 리포트를 이메일로 발송합니다.
5.  **클라이언트 측 에러 로깅**: 프론트엔드에서 발생하는 주요 에러(예: API 호출 실패) 또한 별도의 로깅 함수를 통해 백엔드로 전송하여 통합 관리하는 것을 고려합니다.

### 테스트 전략
1.  **의도적 에러 발생**: 고의로 오류를 발생시키는 테스트용 Edge Function을 만들어 호출합니다.
2.  **실시간 알림 확인**: 함수 호출 즉시 지정된 Slack 채널과 이메일로 장애 알림이 수신되는지 확인합니다.
3.  **알림 내용 검증**: 수신된 알림에 문제 원인 파악에 필요한 정보(함수명, 에러 메시지, 요청 데이터 등)가 충분히 포함되어 있는지 확인합니다.
4.  **정상 동작 시 미발송 확인**: 정상적으로 기능이 동작할 때는 장애 알림이 발송되지 않는다는 것을 확인합니다.

---

**Created:** 2025-07-29T04:44:49.562Z
**Updated:** 2025-08-10T23:40:12.477Z

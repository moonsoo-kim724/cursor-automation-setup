# 웹 접근성(WCAG 2.1 AA) 및 반응형 디자인 개선

**Task ID:** T-022
**Status:** DONE
**Importance:** MUST
**Complexity:** 6/10
**Urgency:** 9/10
**Dependencies:** T-017, T-018, T-019

## Description

### 설명
웹 콘텐츠 접근성 지침(WCAG 2.1) AA 레벨을 준수하도록 웹사이트의 접근성을 개선하고, 모바일 및 태블릿 등 다양한 디바이스에서 일관되고 편리한 사용자 경험을 제공하도록 반응형 디자인을 강화합니다. 이를 통해 모든 사용자가 정보 격차 없이 서비스를 이용할 수 있도록 보장합니다.

### 구현 상세
1.  **시맨틱 HTML 적용**: `<div>`, `<span>`의 남용을 줄이고, 페이지 구조에 맞는 시맨틱 태그(`<main>`, `<nav>`, `<article>`, `<aside>` 등)를 사용하여 문서의 의미를 명확하게 전달합니다.
2.  **키보드 내비게이션 보장**: 모든 인터랙티브 요소(버튼, 링크, 폼)가 키보드의 `Tab` 키로 순차적으로 접근 가능하도록 하고, 현재 포커스된 요소를 명확하게 시각적으로 표시(`outline`)합니다. 드롭다운 메뉴나 모달 등 복잡한 컴포넌트의 경우 키보드 트랩(trap)을 방지하고 `Esc` 키로 닫을 수 있도록 구현합니다.
3.  **ARIA 속성 적용**: 동적으로 상태가 변하는 컴포넌트(아코디언, 탭 등)에 `aria-expanded`, `aria-selected` 등의 ARIA 상태 속성을 적용하고, 역할이 불분명한 요소에는 `role` 속성을 부여하여 스크린리더 사용자에게 정확한 정보를 제공합니다.
4.  **명도 대비 준수**: `T-016`에서 정의한 색상들이 텍스트와 배경 간에 4.5:1 이상의 명도 대비를 충족하는지 접근성 검사 도구로 확인하고, 미달 시 디자인 가이드에 맞춰 색상을 조정합니다.
5.  **반응형 디자인 강화**: Tailwind CSS의 반응형 분기점(`sm`, `md`, `lg`, `xl`)을 사용하여 모바일 우선 접근법으로 UI를 구현합니다. 화면 크기에 따라 폰트 크기, 여백, 그리드 레이아웃이 유연하게 변경되도록 설계합니다.

### 테스트 전략
1.  **자동화된 접근성 검사**: `eslint-plugin-jsx-a11y`를 린팅 과정에 포함하고, `axe-core` 기반의 브라우저 확장 프로그램이나 Jest 테스트 환경(`@axe-core/react`)을 사용하여 접근성 위반 사항을 자동으로 검출합니다.
2.  **수동 스크린리더 테스트**: 주요 사용자 시나리오(회원가입, 예약, 정보 조회 등)를 VoiceOver(macOS), NVDA(Windows)와 같은 실제 스크린리더를 사용하여 직접 테스트하며 정보 누락이나 오작동이 없는지 확인합니다.
3.  **키보드 단독 사용 테스트**: 마우스를 사용하지 않고 오직 키보드만으로 사이트의 모든 기능을 처음부터 끝까지 사용할 수 있는지 테스트합니다. 포커스 순서가 논리적인지, 모든 인터랙티브 요소에 접근 가능한지 검증합니다.
4.  **다양한 디바이스 테스트**: 브라우저 개발자 도구의 디바이스 모드와 실제 모바일/태블릿 기기를 사용하여 다양한 화면 해상도에서 UI가 깨지거나 사용성이 저하되는 부분이 없는지 확인합니다.

---

**Created:** 2025-07-30T03:34:48.326Z
**Updated:** 2025-08-10T23:40:22.055Z
